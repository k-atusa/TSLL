타입 시스템:
  기본 타입: 정수 int, 실수 float, 불리언 bool
  접두사: unsigned, 8bit, 16bit, 32bit, 64bit
  캐스팅: (T) id

포인터:
  이제 배열의 이름은 첫 항목에 대한 포인터와 완전히 동일함.
  함수 포인터: T id(...); (함수 선언과 동일)
  malloc, free, sizeof 지원.
  NULL 대신 void 키워드 사용.

변수:
  T id;
  T id = expr;

배열과 인덱싱:
  T[N] id; (타입은 T*)
  T[N] id = {...};
  id[n]은 *(id + n)과 동일하다.

연산자:
  메모리: 역참조 *, 참조 &
  산술: + - * / %
  관계: < <= > >= == !=
  논리: && || !
  비트: & | ~ ^ << >>

제어문:
  if (bool) scope, if (bool) scope else scope, if (bool) scope else if (bool) scope
  while (bool) scope

함수, 구조체, 열거형:
  함수는 반환형 + 이름 + 괄호로 묶인 인자들로 구성된다.
  T id(...) {...}
  return expr;
  구조체는 이름 + 블록으로 묶인 필드들로 구성된다.
  id { T id; T id; ... }
  열거형은 구조체와 동일하나, 필드 타입이 없으며 내부적으로 int로 취급된다.
  id { id; id; ... }

모듈:
  파일명이 모듈 name.
  #include "name"; (로컬 파일 코드)
  #include <name>; (전역 저장소 코드)
  함수, 구조체, 필드명, 열거형에서 _로 시작하는 이름은 export 되지 않는다.

컴파일러 지시:
  주석 : //, /* */
  #order 사용 :
    #raw_asm {...}
    #raw_llvm {...}
    #raw_c {...}

====================
키워드 (18개):
  리터럴 (3개): void, true, false
  타입 (8개): int, float, bool, unsigned, 8bit, 16bit, 32bit, 64bit
  메모리 (3개): malloc, free, sizeof
  제어 (4개): if, else, while, return
